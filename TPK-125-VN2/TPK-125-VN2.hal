loadrt trivkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
#loadrt probe_parport
loadrt hostmot2
loadrt hm2_pci config="firmware=hm2/5i25/7i77_7i76.bit num_encoders=6 num_pwmgens=6 num_3pwmgens=0 num_stepgens=0  "
setp     hm2_5i25.0.pwmgen.pwm_frequency 24000
setp     hm2_5i25.0.pwmgen.pdm_frequency 6000
setp     hm2_5i25.0.watchdog.timeout_ns 10000000

loadrt not count=10
loadrt pid names=pid.x,pid.z
loadrt and2 count=25
loadrt or2 count=3
loadrt oneshot count=3
loadrt timedelay count=2
loadrt charge_pump
loadrt minmax names=minmax.z,minmax.x
loadrt conv_s32_float count=1
loadrt weighted_sum wsum_sizes=5
#loadrt flipflop count=1

addf hm2_5i25.0.read servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf hm2_5i25.0.write         servo-thread
addf hm2_5i25.0.pet_watchdog  servo-thread
addf not.0 servo-thread
addf not.1 servo-thread
addf not.2 servo-thread
addf not.3 servo-thread
addf not.4 servo-thread #free
addf not.5 servo-thread #free
addf not.6 servo-thread #free
addf not.7 servo-thread #free
addf not.8 servo-thread
addf not.9 servo-thread
addf and2.0 servo-thread
addf and2.1 servo-thread
addf and2.2 servo-thread
addf and2.3 servo-thread
addf and2.4 servo-thread
addf and2.5 servo-thread
addf and2.6 servo-thread
addf and2.7 servo-thread
addf and2.8 servo-thread
addf and2.9 servo-thread
addf and2.10 servo-thread
addf and2.11 servo-thread
addf and2.12 servo-thread
addf and2.13 servo-thread
addf and2.14 servo-thread
addf and2.15 servo-thread
addf and2.16 servo-thread
addf and2.17 servo-thread
addf and2.18 servo-thread #free
addf and2.19 servo-thread
addf and2.20 servo-thread
addf and2.21 servo-thread
addf and2.22 servo-thread
addf and2.23 servo-thread
addf and2.24 servo-thread
addf or2.0 servo-thread
addf or2.1 servo-thread
addf or2.2 servo-thread
addf oneshot.0 servo-thread
addf oneshot.1 servo-thread
addf oneshot.2 servo-thread
addf timedelay.0 servo-thread
addf timedelay.1 servo-thread
addf charge-pump servo-thread
addf minmax.x servo-thread
addf minmax.z servo-thread
addf conv-s32-float.0 servo-thread
addf process_wsums servo-thread
#addf flipflop.0 servo-thread

addf pid.x.do-pid-calcs servo-thread
addf pid.z.do-pid-calcs servo-thread



#----------------------------------------------------------------
#                      CONNECT PINS
#----------------------------------------------------------------

#####################################
# external output pins to MESA 5i25 #
#####################################

# --- BED-LUBE --- pin 86
#net LUBE.bed-lube           => hm2_5i25.0.gpio.040.out
#setp    hm2_5i25.0.gpio.040.is_output true
#setp    hm2_5i25.0.gpio.040.invert_output true

# --- MACHINE-IS-ON --- pin 140
net machine-is-on => hm2_5i25.0.gpio.041.out
setp hm2_5i25.0.gpio.041.is_output true
setp hm2_5i25.0.gpio.041.invert_output true

# --- COOLANT-FLOOD --- pin 144
#net coolant-flood      => hm2_5i25.0.gpio.042.out
setp    hm2_5i25.0.gpio.042.is_output true
setp    hm2_5i25.0.gpio.042.invert_output true

# --- MANUAL-MODE --- pin 141
net manual-mode => hm2_5i25.0.gpio.043.out
setp hm2_5i25.0.gpio.043.is_output true
setp hm2_5i25.0.gpio.043.invert_output true

# --- SPINDLE-LOCK --- pin 146
net manual-mode => hm2_5i25.0.gpio.044.out
setp hm2_5i25.0.gpio.044.is_output true
setp hm2_5i25.0.gpio.044.invert_output false

# --- SPINDLE-CW / M03 --- pin 142
net SPINDLE.cw => hm2_5i25.0.gpio.045.out
setp hm2_5i25.0.gpio.045.is_output true
setp hm2_5i25.0.gpio.045.invert_output true

# --- SPINDLE-CCW / M04 --- pin 143
net SPINDLE.ccw => hm2_5i25.0.gpio.047.out
setp hm2_5i25.0.gpio.047.is_output true
setp hm2_5i25.0.gpio.047.invert_output true

# --- CHARGE-PUMP --- pin 135
net charge charge-pump.out => hm2_5i25.0.gpio.046.out
setp hm2_5i25.0.gpio.046.is_output true
setp hm2_5i25.0.gpio.046.invert_output true

######################################
# external input pins from MESA 5i25 #
######################################

###################
# HOME and LIMITS #
###################

# --- X-MAX --- pin 102
net X.neg-limit   <=  hm2_5i25.0.gpio.024.in_not

# --- X-MIN --- pin 103
net X.pos-limit   <=  hm2_5i25.0.gpio.027.in_not

# --- Z-MAX --- pin 106
net Z.pos-limit   <=  hm2_5i25.0.gpio.034.in_not

# --- Z-MIN --- pin 107
net Z.neg-limit   <=  hm2_5i25.0.gpio.025.in_not

# --- X-HOME --- pin 109
net X.home-sw     <=  hm2_5i25.0.gpio.030.in

# --- GO HOME --- pin 125
net go-home-btn   <=  hm2_5i25.0.gpio.063.in_not

##################
#     JOGGING    #
##################
# --- JOG speed pins 119-124
net JOG.step           <=  hm2_5i25.0.gpio.054.in_not
net JOG.speed-3        <=  hm2_5i25.0.gpio.059.in_not
net JOG.speed-30       <=  hm2_5i25.0.gpio.031.in_not
net JOG.speed-300      <=  hm2_5i25.0.gpio.026.in_not
net JOG.speed-2000     <=  hm2_5i25.0.gpio.028.in_not

# --- JOG+ --- pin 130
net JOG.selected-pos   <=  hm2_5i25.0.gpio.048.in_not

# --- JOG. --- pin 131
net JOG.selected-neg   <=  hm2_5i25.0.gpio.058.in_not

# --- JOG.SELECT-X --- pin 132
net JOG.select-x     <=  hm2_5i25.0.gpio.052.in_not

# --- JOG.SELECT-Z --- pin 134
net JOG.select-z     <=  hm2_5i25.0.gpio.056.in_not

#####################
# STATUS and ERRORS #
#####################

# --- SPINDLE-OVERHEAT --- pin 93
#net ALARM.spindle       <=  hm2_5i25.0.gpio.033.in
#net SPINDLE.alarm-not   <=  hm2_5i25.0.gpio.033.in_not

# --- FLOOD-OVERHEAT --- pin 94
#net flood-overheat       <=  hm2_5i25.0.gpio.035.in
#net flood-overheat-not   <=  hm2_5i25.0.gpio.035.in_not

# --- OIL-PUMP-OVERHEAT --- pin 95
#net oil-pump-overheat       <=  hm2_5i25.0.gpio.049.in
#net oil-pump-overheat-not   <=  hm2_5i25.0.gpio.049.in_not

# --- AIR-PRESSURE --- pin 98
#net air-pressure       <=  hm2_5i25.0.gpio.037.in_not
#net air-pressure-not   <=  hm2_5i25.0.gpio.037.in

# ---  SERVO-AMPS-ON --- pin 99
#net servo-amps-on      <=  hm2_5i25.0.gpio.039.in_not
#net servo-amps-off     <=  hm2_5i25.0.gpio.039.in

# ---  EMG-OFF --- pin 108
#net emergency-off      <=  hm2_5i25.0.gpio.053.in_not

##################
#     M-REPLY    #
##################
# --- SPINDLE-CW-ON / M03 --- pin 114
#net SPINDLE.cw-on      <= hm2_5i25.0.gpio.055.in_not

# --- SPINDLE-CCW-ON / M04 --- pin 115
#net SPINDLE.ccw-on      <= hm2_5i25.0.gpio.051.in_not

##################
# LUBE and FLOOD #
##################

# --- LUBE BUTTON --- pin 87
#net LUBE.on-btn        <=  hm2_5i25.0.gpio.061.in_not

# --- FLOOD ON BUTTON --- pin 128
#net flood-on-btn       <=  hm2_5i25.0.gpio.060.in_not

# --- FLOOD OFF BUTTON --- pin 129
#net flood-off-btn      <=  hm2_5i25.0.gpio.057.in_not

##################
# START-PROGRAMM #
##################

# --- START/CONTINUE PROGRAM BUTTON ---
net start-program-btn   <=  hm2_5i25.0.gpio.062.in_not


# --- CONTROL-24V --- pin 96
#not used

# --- SPINDLE-SELECT --- pin 112
#not used

#----------------------------------------------------------------
#                      MAIN PROGRAM
#----------------------------------------------------------------


#########################
# RESET MIN/MAX ERRORS  #
#########################
# --- reset min/max errors on power off ---
net machine-is-on       =>  not.1.in
net reset-ferror        <=  not.1.out
net reset-ferror        =>  minmax.x.reset
net reset-ferror        =>  minmax.z.reset


#########################
# LUBE, LUBE-BED ON/OFF #
#########################
#set 3 sec delay impulse for first switch-on bed lube
#setp oneshot.0.width         3
#switch on bed-lube with machine start
#net machine-is-on => oneshot.0.in

#set 15 sec delay impulse for lube button pressed
#setp oneshot.1.width         15
#net LUBE.on-btn              =>  oneshot.1.in

#net LUBE.delay-pon oneshot.0.out        =>  or2.0.in0
#net LUBE.delay-lube-btn oneshot.1.out   =>  or2.0.in1
#net LUBE.delay-lube or2.0.out           =>  or2.1.in0
#net LUBE.timer-delay                    =>  or2.1.in1
#net LUBE.bed-lube                      <=   or2.1.out

#create timer for bed-lube
#the impulse will be 3 sec
#the delay between impulse will be 60min = 60*60=3600 sec
#setp timedelay.0.on-delay    3600
#setp timedelay.0.off-delay   3
#net LUBE.is-on               =>  and2.0.in0
#net LUBE.timer-in            =>  and2.0.in1
#net LUBE.timer-in-1          =>  and2.0.out
#net LUBE.timer-in-1          =>  timedelay.0.in
#net LUBE.timer-delay         =>  timedelay.0.out
#net LUBE.timer-delay         =>  not.0.in
#net LUBE.timer-in           <=   not.0.out
#net LUBE.timer-elapsed      <=   timedelay.0.elapsed

###########################
#    ALARM and WARNING    #
###########################

net SPINDLE.overheat-not     =>  and2.19.in0
net flood-overheat-not       =>  and2.20.in0
net oil-pump-overheat-not    =>  and2.20.in1

net PON.overheat-not        <=   and2.19.out  => not.8.in
net PON.overheat            <=   not.8.out    => and2.22.in0
net machine-is-on            =>  and2.22.in1
net PON.pause               <=   and2.22.out  => and2.23.in0
net auto-mode                =>  and2.23.in1
net program-pause           <=   and2.23.out

#set 2 sec delay for oil pressure
setp timedelay.1.on-delay    2
setp timedelay.1.off-delay   0

net oil-pressure-not         =>  timedelay.1.in
net oil-pressure-not-deb    <=  timedelay.1.out            =>  or2.2.in0
net servo-amps-off           =>  or2.2.in1
net PON.alarm               <=   or2.2.out

###########################
# MACHINE ON/OFF SEQUENCE #
###########################

#Try to turn-on machine when oil-pump and flood overheats disapeared
net machine-on           <=   and2.20.out  =>   and2.19.in1


#set 10 sec delay impulse when machine is on
setp oneshot.2.width 10
#switch on on machine start
net machine-is-on    =>  oneshot.2.in
net PON.time-left   <=   oneshot.2.time-left
net PON.time-out    <=   oneshot.2.out-not
net PON.time-out     =>  and2.21.in0
net PON.alarm        =>  and2.21.in1
#alarm
net PON.out-stop    <=   and2.21.out  => and2.24.in0
net PON.lock         =>  not.9.in
net PON.lock-not    <=   not.9.out    => and2.24.in1
net machine-off     <=   and2.24.out

#Set clck flipflop pin if alarm occurs
#net PON.out-stop     =>  flipflop.0.clk
#net machine-is-on    =>  flipflop.0.data
#net machine-off     <=   flipflop.0.out


####################
#     JOGGING      #
####################

#step
newsig JOG.increment float
sets JOG.increment  0.001
#speeds
setp wsum.0.bit.0.weight  1
setp wsum.0.bit.1.weight  3
setp wsum.0.bit.2.weight  30
setp wsum.0.bit.3.weight  300
setp wsum.0.bit.4.weight  2000

net JOG.step           =>  wsum.0.bit.0.in
net JOG.speed-3        =>  wsum.0.bit.1.in
net JOG.speed-30       =>  wsum.0.bit.2.in
net JOG.speed-300      =>  wsum.0.bit.3.in
net JOG.speed-2000     =>  wsum.0.bit.4.in
net JOG.speed-int      <=  wsum.0.sum => conv-s32-float.0.in
net JOG.speed          <=  conv-s32-float.0.out


net JOG.selected-pos   =>  and2.2.in0
net JOG.selected-pos   =>  and2.3.in0
net JOG.selected-pos   =>  and2.4.in0

net JOG.selected-neg   =>  and2.5.in0
net JOG.selected-neg   =>  and2.6.in0
net JOG.selected-neg   =>  and2.7.in0

net JOG.select-x       =>  and2.2.in1
net JOG.select-x       =>  and2.5.in1

net JOG.select-z       =>  and2.4.in1
net JOG.select-z       =>  and2.7.in1

net JOG.step           =>  not.2.in
net JOG.vel            <=  not.2.out
net JOG.vel            => and2.8.in1
net JOG.vel            => and2.9.in1
net JOG.vel            => and2.10.in1
net JOG.vel            => and2.11.in1
net JOG.vel            => and2.12.in1
net JOG.vel            => and2.13.in1

net JOG.inc-x-pos      <=  and2.2.out => and2.8.in0
net JOG.inc-z-pos      <=  and2.4.out => and2.10.in0
net JOG.inc-x-neg      <=  and2.5.out => and2.11.in0
net JOG.inc-z-neg      <=  and2.7.out => and2.13.in0

net JOG.x-pos          <=  and2.8.out
net JOG.z-pos          <=  and2.10.out
net JOG.x-neg          <=  and2.11.out
net JOG.z-neg          <=  and2.13.out

####################
#      HOMING      #
####################
net X.is-homed      =>  and2.15.in0
net Z.is-homed      =>  and2.15.in1
net is-homed       <=   and2.15.out  => not.3.in
net is-homed-not   <=   not.3.out    => and2.16.in0
net go-home-btn     =>  and2.16.in1
net home-all       <=   and2.16.out

net is-homed        =>  and2.17.in0
net go-home-btn     =>  and2.17.in1
net go-home        <=   and2.17.out

#TBD enable home button only in manual mode (or pause).

#*******************
#  AXIS X
#*******************

setp   pid.x.Pgain     [AXIS_0]P
setp   pid.x.Igain     [AXIS_0]I
setp   pid.x.Dgain     [AXIS_0]D
setp   pid.x.bias      [AXIS_0]BIAS
setp   pid.x.FF0       [AXIS_0]FF0
setp   pid.x.FF1       [AXIS_0]FF1
setp   pid.x.FF2       [AXIS_0]FF2
setp   pid.x.deadband  [AXIS_0]DEADBAND
setp   pid.x.maxoutput [AXIS_0]MAX_OUTPUT

net X.index-enable  <=>  pid.x.index-enable
net X.enable       => pid.x.enable
net X.output       => pid.x.output
net X.pos-cmd      => pid.x.command
net X.vel-fb       => pid.x.command-deriv
net X.pos-fb       => pid.x.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i25.0.pwmgen.00.output-type 2
setp   hm2_5i25.0.pwmgen.00.scale  [AXIS_0]OUTPUT_SCALE

net X.output                             => hm2_5i25.0.pwmgen.00.value
net X.pos-cmd    axis.0.motor-pos-cmd
net X.enable     axis.0.amp-enable-out  => hm2_5i25.0.pwmgen.00.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.00.counter-mode 0
setp    hm2_5i25.0.encoder.00.filter 1
setp    hm2_5i25.0.encoder.00.index-invert 0
setp    hm2_5i25.0.encoder.00.index-mask 0
setp    hm2_5i25.0.encoder.00.index-mask-invert 0
setp    hm2_5i25.0.encoder.00.scale  [AXIS_0]ENCODER_SCALE

net X.pos-fb               <=  hm2_5i25.0.encoder.00.position
net X.vel-fb               <=  hm2_5i25.0.encoder.00.velocity
net X.pos-fb               =>  axis.0.motor-pos-fb
net X.index-enable    axis.0.index-enable  <=>  hm2_5i25.0.encoder.00.index-enable
net X.pos-rawcounts        <=  hm2_5i25.0.encoder.00.rawcounts

# ---setup home / limit switch signals---

net X.home-sw       =>  axis.0.home-sw-in
net X.neg-limit     =>  axis.0.neg-lim-sw-in
net X.pos-limit     =>  axis.0.pos-lim-sw-in
net X.ferror        =>  axis.0.f-error
net X.ferror        =>  minmax.z.in
net X.ferror-min    <=  minmax.z.min
net X.ferror-max    <=  minmax.z.max

#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [AXIS_2]P
setp   pid.z.Igain     [AXIS_2]I
setp   pid.z.Dgain     [AXIS_2]D
setp   pid.z.bias      [AXIS_2]BIAS
setp   pid.z.FF0       [AXIS_2]FF0
setp   pid.z.FF1       [AXIS_2]FF1
setp   pid.z.FF2       [AXIS_2]FF2
setp   pid.z.deadband  [AXIS_2]DEADBAND
setp   pid.z.maxoutput [AXIS_2]MAX_OUTPUT

net Z.index-enable  <=>  pid.z.index-enable
net Z.enable       => pid.z.enable
net Z.output       => pid.z.output
net Z.pos-cmd      => pid.z.command
net Z.vel-fb       => pid.z.command-deriv
net Z.pos-fb       => pid.z.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i25.0.pwmgen.02.output-type 2
setp   hm2_5i25.0.pwmgen.02.scale  [AXIS_2]OUTPUT_SCALE

net Z.output                             => hm2_5i25.0.pwmgen.02.value
net Z.pos-cmd    axis.2.motor-pos-cmd
net Z.enable     axis.2.amp-enable-out  => hm2_5i25.0.pwmgen.02.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.02.counter-mode 0
setp    hm2_5i25.0.encoder.02.filter 1
setp    hm2_5i25.0.encoder.02.index-invert 0
setp    hm2_5i25.0.encoder.02.index-mask 0
setp    hm2_5i25.0.encoder.02.index-mask-invert 0
setp    hm2_5i25.0.encoder.02.scale  [AXIS_2]ENCODER_SCALE

net Z.pos-fb               <=  hm2_5i25.0.encoder.02.position
net Z.vel-fb               <=  hm2_5i25.0.encoder.02.velocity
net Z.pos-fb               =>  axis.2.motor-pos-fb
net Z.index-enable    axis.2.index-enable  <=>  hm2_5i25.0.encoder.02.index-enable
net Z.pos-rawcounts        <=  hm2_5i25.0.encoder.02.rawcounts

# ---setup home / limit switch signals---

net Z.home-sw       =>  axis.2.home-sw-in
net Z.neg-limit     =>  axis.2.neg-lim-sw-in
net Z.pos-limit     =>  axis.2.pos-lim-sw-in
net Z.ferror        =>  axis.2.f-error
net Z.ferror        =>  minmax.z.in
net Z.ferror-min    <=  minmax.z.min
net Z.ferror-max    <=  minmax.z.max

#*******************
#  SPINDLE S
#*******************

# ---setup spindle control signals---

net SPINDLE.vel-cmd-rps    <=   motion.spindle-speed-out-rps
net SPINDLE.vel-cmd        <=   motion.spindle-speed-out
net SPINDLE.enable         <=   motion.spindle-on
net SPINDLE.cw             <=   motion.spindle-forward
net SPINDLE.ccw            <=   motion.spindle-reverse
net SPINDLE.brake          <=   motion.spindle-brake
net SPINDLE.revs            =>  motion.spindle-revs
net SPINDLE.at-speed        =>  motion.spindle-at-speed
net SPINDLE.vel-fb          =>  motion.spindle-speed-in
net SPINDLE.index-enable   <=>  motion.spindle-index-enable

# ---Setup spindle at speed signals---

sets SPINDLE.at-speed true


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net X.is-homed             <=   halui.joint.0.is-homed
net Z.is-homed             <=   halui.joint.2.is-homed
net home-all                =>  halui.home-all
net go-home                 =>  halui.mdi-command-00

#net LUBE.is-on             <=   halui.lube.is-on
net is-running             <=   halui.program.is-running
net is-paused              <=   halui.program.is-paused
net program-pause           =>  halui.program.pause
net is-idle                <=   halui.program.is-idle

net SPINDLE.manual-start    =>  halui.spindle.start
net SPINDLE.manual-cw       =>  halui.spindle.forward
net SPINDLE.manual-ccw      =>  halui.spindle.reverse
net SPINDLE.manual-stop     =>  halui.spindle.stop

#net SPINDLE.enable         <=   halui.spindle.is-on
#net SPINDLE.cw             <=   halui.spindle.runs-forward
#net SPINDLE.ccw            <=   halui.spindle.runs-backward
#net SPINDLE.brake          <=   halui.spindle.brake-is-on

net machine-is-on        <=   halui.machine.is-on
net auto-mode            <=   halui.mode.is-auto
net MDI-mode             <=   halui.mode.is-mdi
net manual-mode          <=   halui.mode.is-manual

net X.pos-feedback       <=   halui.axis.0.pos-feedback
net Z.pos-feedback       <=   halui.axis.2.pos-feedback

net JOG.speed             =>  halui.jog-speed
net JOG.increment         =>  halui.jog.0.increment
net JOG.increment         =>  halui.jog.1.increment
net JOG.increment         =>  halui.jog.2.increment

net JOG.x-pos             =>  halui.jog.0.plus
net JOG.x-neg             =>  halui.jog.0.minus
net JOG.z-pos             =>  halui.jog.2.plus
net JOG.z-neg             =>  halui.jog.2.minus

net JOG.inc-x-pos         =>  halui.jog.0.increment-plus
net JOG.inc-x-neg         =>  halui.jog.0.increment-minus
net JOG.inc-z-pos         =>  halui.jog.2.increment-plus
net JOG.inc-z-neg         =>  halui.jog.2.increment-minus

net flood-on-btn          =>  halui.flood.on
net flood-off-btn         =>  halui.flood.off
net coolant-flood        <=   halui.flood.is-on
#net flood-on            <=   iocontrol.0.coolant-flood

net machine-on            =>  halui.machine.on
net machine-off           =>  halui.machine.off


#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position

#  ---digital in / out signals---

#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-out     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared



#******************************
# startup commands
#******************************

# --- E-STOP actually not connected, enable it by default
setp halui.estop.reset TRUE
